<?xml version="1.0" encoding="utf-8"?>
<cw:DesktopWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				  xmlns:s="library://ns.adobe.com/flex/spark" 
				  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:cw="net.lanelife.framework.cw.*"   creationComplete="init()" width="770" height="300" title="生成excel">
	<cw:layout>
		<s:BasicLayout/>
	</cw:layout>
	<fx:Declarations>
		
		<mx:ChannelSet id="cs">
			<mx:AMFChannel uri="/mobile-store-system/messagebroker/amf"/>
		</mx:ChannelSet>
		<mx:RemoteObject id="InOutDetail"   
						 destination="inOutDetailManager" channelSet="{cs}">
			<mx:method name="GetlistbyCategory" result="handleResult_GetlistbyCategory(event)"/> 
			<mx:method name="GetlistbyItem" result="handleResult_GetlistbyItem(event)"/> 
			
		</mx:RemoteObject> 
		<mx:RemoteObject id="StoreInOutManager"   
						 destination="storeInOutManager" channelSet="{cs}">
			<mx:method name="GetlistbyMoneyandDate" result="handleResult_GetlistbyMoneyandDate(event)"/>
			<mx:method name="getStoreInOutByDate" result="handleResult_getStoreInOutByDate(event)"/>
		</mx:RemoteObject> 
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import charts.balloonWithRoundedCorners;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ArrayUtil;
			
			import myAs.CategoryF;
			import myAs.Util;
			
			import net.lanelife.framework.cw.Dialog;
			import net.lanelife.framework.cw.Dimension;
			import net.lanelife.framework.cw.Window;
			
			import windows.reportforms.reportDataWin;
			
			[Bindable] 
			public var Categories:ArrayUtil = new ArrayUtil(); 
			
			[Bindable] 
			public var exceltest:Array = new Array(); 
			
			[Bindable] 
			public var excelType:String="no" ;
			
			[Bindable] 
			public var chartType:String="" ;
			
			[Bindable] 
			public var chart_timeType : String = "" ;
		
			[Bindable]     
			private var chart_today:Date = new Date(new Date().setHours(0,0,0,0));     
			[Bindable]     
			private var chart_start:Date = chart_today;     
			[Bindable]     
			private var chart_end:Date = null;     
			
			private var chart_dateRange:Object ;   
			
			protected function init():void
			{
				
				excelType="药品销售详细报表";
				chartType="药品分类销售比例图表";
				chart_timeType = "本年度";
			}
			
			
			protected function initTime():void
			{
				chart_timeType = "本年度";
				
				chart_startDF.text="";
				chart_endDF.text="";
				this.chart_start = chart_today;     
				this.chart_end = null; 
				chart_dateRange = new Object();
				
			}
			private function chart_onDateChangeHandler(event:Event):void     
			{     
				
				chart_timeContext.selection = xuanBon;
				
				chart_timeType = "选择具体时间";
				
				
				if(chart_startDF.text == "")     
				{     
					chart_startDF.selectedDate = chart_start;     
				}     
				else     
				{     
					chart_start = chart_startDF.selectedDate;    
					
				}     
				
				if(chart_endDF.text == "")     
				{     
					chart_endDF.selectedDate = this.chart_end;     
				}     
				else     
				{   chart_dateRange = new Object();
					this.chart_end = chart_endDF.selectedDate;    
					chart_dateRange["rangeEnd"] = this.chart_end;   
					chart_startDF.selectableRange = chart_dateRange;   
				}     
				
			}      
			
			
			
			
			
			
			//专用回调函数 ，替代 initWindow 刷新数据时留在先前页
			
			public function handleResult_GetlistbyMoneyandDate(event:ResultEvent):void
			{
				var tempList :  Array ;
				if(event.result!=null){
					
					var tempChartData:ArrayCollection;
					
					tempChartData  = event.result as ArrayCollection ;
					var  newchart:balloonWithRoundedCorners = balloonWithRoundedCorners (PopUpManager.createPopUp(this,balloonWithRoundedCorners,false));
					newchart.chartData = tempChartData;
					
				}
				else
				{
					Alert.show("数据提供异常，无法生成图表");
					
				}
			}
			
			public function handleResult_GetlistbyItem(event:ResultEvent):void
			{
				
				
				
				
				var tempList :  Array ;
				if(event.result!=null){
					
					var tempChartData:ArrayCollection;
					
					tempChartData  = event.result as ArrayCollection ;
					var  newchart:balloonWithRoundedCorners = balloonWithRoundedCorners (PopUpManager.createPopUp(this,balloonWithRoundedCorners,false));
					newchart.chartData = tempChartData;
					
				}
				else
				{
					Alert.show("数据提供异常，无法生成图表");
					
				}
			}
			
			public function handleResult_GetlistbyCategory(event:ResultEvent):void
			{
				var tempList :  Array ;
				if(event.result!=null){
					
					var tempChartData:ArrayCollection;
					tempChartData  = event.result as ArrayCollection ;
					var  newchart:balloonWithRoundedCorners = balloonWithRoundedCorners (PopUpManager.createPopUp(this,balloonWithRoundedCorners,false));
					newchart.chartData = tempChartData;
					
				}
				else
				{
					Alert.show("数据提供异常，无法生成图表");
					
				}
			}
			
			
			//excel
			public function handleResult_getStoreInOutByDate(event:ResultEvent):void
			{
			}	
			
			
	
			
			protected function newexcel(event:MouseEvent):void
			{
				//Util.exportToExcel(myDg);
			}
			
			protected function newexcelDataWin(event:MouseEvent):void
			{
				
				var ckaitime :String = ""//chart_startDF.text+" "+"00:00:00";
				var cjietime :String = ""//chart_endDF.text+" "+"00:00:00";
				var singlename :String  ="";
				
				var nowYear :String ="";
				var tempdate : Date = new Date();
				nowYear = nowYear+tempdate.fullYear;
				
				var nowkaitime:String  =  nowYear+"-01-01"+" "+"00:00:00";
				var nowjietime:String =   nowYear+"-12-31"+" "+"00:00:00";
				
				
				
				if(chart_timeType=="本年度")
				{
					
					ckaitime = nowkaitime;
					
					cjietime = nowjietime;
					
					
				}
				else if(chart_timeType=="选择具体时间")
				{
					if(chart_startDF.text=="" || chart_endDF.text=="")
					{
						Alert.show("请选择时间");
						return;
						
					}
				
				
				
					ckaitime  = chart_startDF.text+" "+"00:00:00";
					cjietime  = chart_endDF.text+" "+"00:00:00";
					
				}
				
				
		
				
				
				if(excelType=="单一药品收入详细报表")
				{
					if(e_itemname.text =="")
					{
						Alert.show("请输入药品名");
						return;
						
					}
					else 
					{
						singlename = e_itemname.text;
						
					}
					
					
					
				}
				
		
			
				var dataWin:reportDataWin  = reportDataWin(PopUpManager.createPopUp(this,reportDataWin,false));
				dataWin.resizable = false;
				dataWin.maximizable = false;
				
				dataWin.startTime = ckaitime;
				dataWin.endTime = cjietime;
				dataWin.dataType = this.excelType;
				dataWin.singleItemName = singlename;
				PopUpManager.centerPopUp(dataWin);
				
				
				
				
				
				
			}
			
			
		
			
			private function excelContext_rb_change(evt:Event):void { 
				var rb:RadioButton = evt.currentTarget as RadioButton; 
				excelType = rb.label;
				if(excelType!="单一药品收入详细报表")
					e_itemname.text="";
				
				
			} 
			
			private function timeContext_rb_change(evt:Event):void { 
				var rb:RadioButton = evt.currentTarget as RadioButton; 
				
				chart_timeType = rb.label;
				
				if(rb.label!="选择具体时间")
					initTime();
			} 
			
		]]>
	</fx:Script>
	
	
	
	<mx:HDividedBox width="100%" height="100%" >
		
		<s:VGroup  height="100%" width="100%">
			
			<s:HGroup width="20%" height="10%">
				<mx:ApplicationControlBar width="100%" dock="true">
					<mx:Label text="时间段选择" />   
				</mx:ApplicationControlBar>  
			</s:HGroup>
			
			<s:HGroup width="100%" height="10%">
				<mx:ApplicationControlBar width="100%" dock="true">
					<mx:RadioButtonGroup id="chart_timeContext"  />
					<mx:RadioButton label="本年度" groupName="chart_timeContext" id="nianBon" selected="true" value ="chanian"  height="30" width="85" change="timeContext_rb_change(event)"/>
					<mx:RadioButton label="选择具体时间" groupName="chart_timeContext"   id="xuanBon" value ="chaxuan"  height="30" width="130" change="timeContext_rb_change(event)"/>
					<mx:Label text="开始时间：" />     
					<mx:DateField id="chart_startDF"  showToday="true" formatString="YYYY-MM-DD"     
								  change="chart_onDateChangeHandler(event)"/>     
					
					<mx:Label text=" 至 "  height="25" width="30" />    
					<mx:Label text="结束时间："/>     
					<mx:DateField id="chart_endDF" showToday="true" formatString="YYYY-MM-DD"     
								  selectableRange="{{rangeStart:chart_start}}" change="chart_onDateChangeHandler(event)"/>  
				</mx:ApplicationControlBar>  
			</s:HGroup>
		
			<s:HGroup width="20%" height="10%">
				<mx:ApplicationControlBar width="30%" dock="true">
					<mx:Label text="excel图表类" />   
				</mx:ApplicationControlBar>  
			</s:HGroup>
			
			<s:HGroup width="100%" height="10%">
				<mx:ApplicationControlBar width="100%" dock="true">
					<mx:RadioButtonGroup id="excelContext"  />
					<mx:RadioButton label="药品销售详细报表" groupName="excleContext" id="e_yao"  value ="yao_excel" height="30" selected="true" width="160" change="excelContext_rb_change(event)"/>
					<mx:RadioButton label="单一药品收入详细报表" groupName="excleContext"  id="e_yaosingle"  value ="yaosingle_excel" height="30" width="160" change="excelContext_rb_change(event)"/>
					
					<s:Label text="    药品名:"  height="30" width="70" />    
					<mx:TextInput id="e_itemname" width="100" maxChars="100" />
					<s:Button label="导出 excel" id="excelBon2" height="30" width="85"  click="newexcelDataWin(event)"/>
					
				</mx:ApplicationControlBar>  
				
			</s:HGroup>
		</s:VGroup >
		
		
	</mx:HDividedBox>
	
	
	
</cw:DesktopWindow>
